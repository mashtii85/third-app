on:
  push:
    branches:
      - staging

name: Deploy to Amazon ECS

jobs:
  deploy:
    if: "contains(github.event.head_commit.message, '--deploy')"
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: test-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and push it to ECR so that it can be deployed to ECS.
          docker build \
            --build-arg NEXT_PUBLIC_API_URL="https://lms.cleverly.works/api" \
            --build-arg NEXT_PUBLIC_AUTH_URL="https://lms.cleverly.works/api/auth" \
            --build-arg NEXT_PUBLIC_GRAPHQL_URL_WS="wss://lms-api.cleverly.works/v1/graphql" \
            --build-arg NEXT_PUBLIC_GRAPHQL_URL="https://lms-api.cleverly.works/v1/graphql" \
            --build-arg NEXT_PUBLIC_GRAPHQL_SECRET=${{ secrets.NEXT_PUBLIC_GRAPHQL_SECRET }} \
            --build-arg NEXT_PUBLIC_S3_UPLOAD_URL="https://lms.cleverly.works/api/media/upload" \
            --build-arg NEXT_PUBLIC_S3_BUCKET="lms-staging-media" \
            --build-arg NEXT_PUBLIC_S3_CDN_URL="https://lms-staging-media.s3.eu-west-2.amazonaws.com" \
            --build-arg NEXT_PUBLIC_JWT_PUBLIC_KEY=${{ secrets.NEXT_PUBLIC_JWT_PUBLIC_KEY }} \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .github/aws/staging.json
          container-name: lms-staging
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: lms
          cluster: cleverly-staging
          wait-for-service-stability: true
          wait-for-service-stability: true
          wait-for-service-stability: true
# name: Cypress Tests

# on: [push]

# jobs:
#   cypress-run:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       # Install NPM dependencies, cache them correctly
#       # and run all Cypress tests
#       - name: Cypress run
#         uses: cypress-io/github-action@v2
#         with:
#           build: npm run build
#           start: npm run cy:test:build

