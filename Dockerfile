# Docker image
FROM node:14-alpine

# Working directory
WORKDIR /usr/src/app

# Env
ARG NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_URL $NEXT_PUBLIC_API_URL

ARG NEXT_PUBLIC_AUTH_URL
ENV NEXT_PUBLIC_AUTH_URL $NEXT_PUBLIC_AUTH_URL

ARG NEXT_PUBLIC_GRAPHQL_URL_WS
ENV NEXT_PUBLIC_GRAPHQL_URL_WS $NEXT_PUBLIC_GRAPHQL_URL_WS

ARG NEXT_PUBLIC_GRAPHQL_URL
ENV NEXT_PUBLIC_GRAPHQL_URL $NEXT_PUBLIC_GRAPHQL_URL

ARG NEXT_PUBLIC_GRAPHQL_SECRET
ENV NEXT_PUBLIC_GRAPHQL_SECRET $NEXT_PUBLIC_GRAPHQL_SECRET

ARG NEXT_PUBLIC_S3_UPLOAD_URL
ENV NEXT_PUBLIC_S3_UPLOAD_URL $NEXT_PUBLIC_S3_UPLOAD_URL

ARG NEXT_PUBLIC_S3_BUCKET
ENV NEXT_PUBLIC_S3_BUCKET $NEXT_PUBLIC_S3_BUCKET

ARG NEXT_PUBLIC_S3_CDN_URL
ENV NEXT_PUBLIC_S3_CDN_URL $NEXT_PUBLIC_S3_CDN_URL

ARG NEXT_PUBLIC_JWT_PUBLIC_KEY
ENV NEXT_PUBLIC_JWT_PUBLIC_KEY $NEXT_PUBLIC_JWT_PUBLIC_KEY

# Copy everything
COPY package*.json ./

# Install app dependencies
RUN npm i --legacy-peer-deps

# Copy source
COPY . .

# Build
RUN npm run build

# Port
EXPOSE 3000

# Run
CMD ["npm", "run" ,"start:production"]
